
#The goal of this project is to re-make the prototype I made because my SD card corrupted and I want to speed-run it from scratch and make it better than ever.
#Last time the projeect was made on a pi4 with a usb mic/speaker. It was able to recieve speed in a wav file, convert that to mp3 to be read using ffmeg
#then it was sent to google stt API and that output was fed into open ai's API as prompt iput. The response output was fed to googles text to speech to 
#read outloud the response. I also used google text to speech to give basic greetings/follow ups/errors.
#using the exec code and some tricky prompts it was able to execute code and save output to a csv/text file/ etc to a specificed folder
#last thing I did was add real time speech streaming to detect a keyword to initiate the script or kill the process.
#whenever I say I I should say we because i did this with chat-gpt3's help

#updates: this since it on a MBP some aspects will need to be added to convert this to linux since I plan to re-make this on a pi4.
#next updates include a camera for facial recognition and behavior prediciton based on emotion/past history -- although emotion can be done with still
#images where as behavior needs real time streaming


in python3 using a MBP M1

pip3 install sounddevice

import sounddevice as sd
import numpy as np

from scipy.io.wavfile import write

#see our devices
print(sd.query_devices())



#device 0 is our MBP mic so lets use it and record for 10 seconds 
fs = 48000
duration = 10 # seconds

devices = sd.query_devices()
input_devices = [d for d in devices if d['max_input_channels'] > 0]

# Find the index of the desired device, for example the built-in microphone
desired_device = None
for i, device in enumerate(input_devices):
    if device['name'] == 'MacBook Pro Microphone':
        desired_device = i
        break

# If the desired device was found, use it
if desired_device is not None:
    try:
        myrecording = sd.rec(int(duration * fs), samplerate=fs, channels=1, device=desired_device)
        sd.wait()
        print("Successfully recorded audio using device:", input_devices[desired_device]['name'])
    except Exception as e:
        print("Error recording audio using device:", input_devices[desired_device]['name'])
        print(e)
else:
    print("Desired device not found")

# Save the recording as a WAV file
write("/Users/nyk/Desktop/myrecording.wav", fs, myrecording)


#Sweet! We can record audio. Now lets listen
